import{b as t}from"./search-199a9ff5.js";import{d8 as e,cP as s,e as r,Y as o,f as a,o as i,c as m,a as p,u as l,k as u,q as j,e1 as n}from"./index-d93ecfd9.js";import{D as g}from"./DataLists-2d284e43.js";import{P as v}from"./index-e01b8113.js";import"./AllArtists-e33e1687.js";import"./text-f881741e.js";import"./use-compitable-f583eb1a.js";import"./light-6dc1ea6d.js";import"./AddPlaylist-0e9ef9cc.js";import"./CreatePlaylist-db76e905.js";import"./Input-19ebdc3b.js";import"./Suffix-1fd55ec3.js";import"./index-92eb66c0.js";import"./use-merged-state-bb55b613.js";import"./light-1b9db3a7.js";import"./Checkbox-995e550a.js";import"./light-2c22dcb8.js";import"./Space-76cfe381.js";import"./get-slot-a0e67e91.js";import"./_common-89f2509f.js";import"./Tag-9bd41f20.js";import"./_common-991711fd.js";import"./Avatar-d697b90d.js";import"./utils-5d91cb42.js";import"./light-d2124738.js";import"./SmallSongData-d7110d79.js";import"./FormItem-ccd063f6.js";import"./light-d411e82b.js";import"./Popover-92ca2497.js";import"./light-f76c98be.js";import"./Follower-829f72e1.js";import"./next-frame-once-924ab492.js";import"./cssr-2139d5e3.js";import"./InputNumber-43a45814.js";import"./Add-00122154.js";import"./Alert-a6104c4f.js";import"./_common-60fffae6.js";import"./Radio-24bd6234.js";import"./RadioGroup-cb180d59.js";import"./light-ca51619b.js";import"./Dropdown-ca523edc.js";import"./create-07671515.js";import"./light-5ced6f1c.js";import"./create-ref-setter-ee697025.js";import"./DrawerContent-b50dea9b.js";import"./light-51fd1fd4.js";import"./Spin-c12f3861.js";import"./light-f8d78f18.js";import"./Pagination-eed167c0.js";import"./Select-d00ca0af.js";import"./light-25af1eec.js";import"./light-16e65505.js";import"./Empty-d19cae85.js";import"./light-f5dc26c8.js";const c={class:"songs"},h={__name:"songs",setup(h){const{t:d}=e(),f=s(),y=r(f.currentRoute.value.query.keywords),b=r([]),q=r(0),x=r(30),C=r(f.currentRoute.value.query.page?Number(f.currentRoute.value.query.page):1),D=(e,s=30,r=0,o=1)=>{t(e,s,r,o).then((t=>{t.result.songs?(q.value=t.result.songCount,b.value=[],t.result.songs.forEach(((t,e)=>{b.value.push({id:t.id,num:e+1+(C.value-1)*x.value,name:t.name,artist:t.ar,album:t.al,alia:t.alia,time:n(t.dt),fee:t.fee,pc:t.pc?t.pc:null,mv:t.mv?t.mv:null})}))):$message.error(d("general.message.acquisitionFailed")),"undefined"!=typeof $scrollToTop&&$scrollToTop()}))};o((()=>f.currentRoute.value),(t=>{y.value=t.query.keywords,C.value=Number(t.query.page?t.query.page:1),"s-songs"==t.name&&D(y.value,x.value,C.value?(C.value-1)*x.value:0)}));const P=t=>{x.value=t,D(y.value,t,(C.value-1)*x.value)},S=t=>{f.push({path:"/search/songs",query:{keywords:y.value,page:t}})};return a((()=>{D(y.value,x.value,(C.value-1)*x.value)})),(t,e)=>(i(),m("div",c,[p(g,{listData:l(b)},null,8,["listData"]),l(b)[0]?(i(),u(v,{key:0,pageNumber:l(C),totalCount:l(q),onPageSizeChange:P,onPageNumberChange:S},null,8,["pageNumber","totalCount"])):j("",!0)]))}};export{h as default};
